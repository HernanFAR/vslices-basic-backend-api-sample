<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VSlices.Core.Events.EventQueue.InMemory</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Extensions.DependencyInjection.InMemoryEventQueueExtensions.AddInMemoryEventQueue(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueueConfiguration})">
            <summary>
            Add a in memory <see cref="T:VSlices.Core.Abstracts.Events.IEventQueue"/> implementation to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">Service Collection</param>
            <param name="configAction">Configuration for the implementation</param>
            <returns>Service Collection</returns>
        </member>
        <member name="T:VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueue">
            <summary>
            Allows publish, peek and dequeue events through a in memory channel
            </summary>
        </member>
        <member name="M:VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueue.#ctor(VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueueConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueue"/>
            </summary>
            <param name="inMemoryPublishConfigOptions"></param>
        </member>
        <member name="M:VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueue.DequeueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueue.EnqueueAsync(VSlices.Core.Abstracts.Requests.IEvent,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueueConfiguration">
            <summary>
            Configuration for <see cref="T:VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueue"/>
            </summary>
        </member>
        <member name="P:VSlices.Core.Events.EventQueue.InMemory.InMemoryEventQueueConfiguration.Capacity">
            <summary>
            Capacity of the queue
            </summary>
            <remarks>Defaults to 50</remarks>
        </member>
    </members>
</doc>
