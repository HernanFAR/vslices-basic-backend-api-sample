<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VSlices.Core.Sender.Reflection</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Extensions.DependencyInjection.ReflectionSenderExtensions.AddReflectionSender(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add a reflection <see cref="T:VSlices.Core.Abstracts.Sender.ISender"/> implementation to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">Service Collection</param>
            <returns>Service Collection</returns>
        </member>
        <member name="T:VSlices.Core.Sender.Reflection.ReflectionSender">
            <summary>
            Sends a request through the VSlices pipeline to be handled by a single handler, using reflection
            </summary>
        </member>
        <member name="M:VSlices.Core.Sender.Reflection.ReflectionSender.#ctor(System.IServiceProvider)">
            <summary>
            Creates a new instance of <see cref="T:VSlices.Core.Sender.Reflection.ReflectionSender"/>
            </summary>
            <param name="serviceProvider"><see cref="T:System.IServiceProvider"/> used to resolve handlers</param>
        </member>
        <member name="M:VSlices.Core.Sender.Reflection.ReflectionSender.SendAsync``1(VSlices.Core.Abstracts.Requests.IRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
    </members>
</doc>
