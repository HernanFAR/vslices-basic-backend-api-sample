<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VSlices.Core.DataAccess.Abstracts</name>
    </assembly>
    <members>
        <member name="T:VSlices.Core.DataAccess.Abstracts.ICreateRepository`1">
            <summary>
            Defines a repository that can create <typeparamref name="TEntity"/> entities
            </summary>
            <typeparam name="TEntity">The entity type to create</typeparam>
        </member>
        <member name="M:VSlices.Core.DataAccess.Abstracts.ICreateRepository`1.CreateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Creates a new <typeparamref name="TEntity"/> entity
            </summary>
            <param name="entity">The values to create the entity</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> holding a <see cref="T:VSlices.Core.Abstracts.Responses.Response`1"/> of <see cref="T:VSlices.Core.Abstracts.Responses.Success"/> that represents the result of the operation </returns>
        </member>
        <member name="T:VSlices.Core.DataAccess.Abstracts.IUpdateRepository`1">
            <summary>
            Defines a repository that can update <typeparamref name="TEntity"/> entities
            </summary>
            <typeparam name="TEntity">The entity type to update</typeparam>
        </member>
        <member name="M:VSlices.Core.DataAccess.Abstracts.IUpdateRepository`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Updates a new <typeparamref name="TEntity"/> entity
            </summary>
            <param name="entity">The values to update the entity</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> holding a <see cref="T:VSlices.Core.Abstracts.Responses.Response`1"/> of <see cref="T:VSlices.Core.Abstracts.Responses.Success"/> that represents the result of the operation </returns>
        </member>
        <member name="T:VSlices.Core.DataAccess.Abstracts.IRemoveRepository`1">
            <summary>
            Defines a repository that can remove <typeparamref name="TEntity"/> entities
            </summary>
            <typeparam name="TEntity">The entity type to remove</typeparam>
        </member>
        <member name="M:VSlices.Core.DataAccess.Abstracts.IRemoveRepository`1.RemoveAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Removes a new <typeparamref name="TEntity"/> entity
            </summary>
            <param name="entity">The entity to remove</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> holding a <see cref="T:VSlices.Core.Abstracts.Responses.Response`1"/> of <see cref="T:VSlices.Core.Abstracts.Responses.Success"/> that represents the result of the operation </returns>
        </member>
        <member name="T:VSlices.Core.DataAccess.Abstracts.IReadRepository`1">
            <summary>
            Defines a repository that response with a <typeparamref name="TDto"/> 
            </summary>
            <typeparam name="TDto">The response to get</typeparam>
        </member>
        <member name="M:VSlices.Core.DataAccess.Abstracts.IReadRepository`1.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Queries data to response with a <see cref="T:VSlices.Core.Abstracts.Responses.Response`1"/>
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> holding a <see cref="T:VSlices.Core.Abstracts.Responses.Response`1"/> of <see cref="T:VSlices.Core.Abstracts.Responses.Success"/> that represents the result of the operation </returns>
        </member>
        <member name="T:VSlices.Core.DataAccess.Abstracts.IReadRepository`2">
            <summary>
            Defines a repository that response with a <typeparamref name="TDto"/> with <typeparamref name="TSearchOptions"/> search options
            </summary>
            <typeparam name="TDto"></typeparam>
            <typeparam name="TSearchOptions"></typeparam>
        </member>
        <member name="M:VSlices.Core.DataAccess.Abstracts.IReadRepository`2.ReadAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Queries data using <typeparamref name="TSearchOptions"/> to response with a <see cref="T:VSlices.Core.Abstracts.Responses.Response`1"/>
            </summary>
            <param name="options"></param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> holding a <see cref="T:VSlices.Core.Abstracts.Responses.Response`1"/> of <see cref="T:VSlices.Core.Abstracts.Responses.Success"/> that represents the result of the operation </returns>
        </member>
    </members>
</doc>
